import random
from typing import Tuple, List

# задание 1 кортеж из 10 элементов. найти максимальный и минимальный
a = tuple([random.randint(1, 100) for i in range(10)])
print(f'из списка {a}: максимальный элемент - {max(a)} и минимальный элемент - {min(a)}')

# задание 2 объединить 2 кортежа и посчитать количетсво 0 в нем
b = tuple([random.randint(0, 5) for p in range(10)])
c = tuple([random.randint(-5, 0) for x in range(10)])
d = b + c
print(d, d.count(0))

# задача 3 вывести данные кортежа без скобок через запятую. элементы - строки
cort = ('I', 'love', 'you')
print(*cort, sep=',')  # вариант 1
print(cort[0], cort[1], cort[2], sep=',')  # вариант 2
for i in cort:  # вариант 3
    print(i, end=',')
f = ','.join(cort)  # вариант 4

# задача 4
g = (13, 5, 43, 49, 67, 32, 12, 98, 6, 10, 34, 20, 55, 68, 14, 60, 14)
h = (53, 21, 4, 23, 76, 3, 43, 12, 54, 342, 21)
if sum(g) > sum(h):
    print(f'сумма эллементов больше в кортеже - {g}')
else:
    print(f'сумма эллементов больше в кортеже - {h}')
print(f'в первом кортеже минимальный элемент - {min(g)} под порядковым номером - {g.index(min(g))},'
      f'во втором кортеже минимальный элемент - {min(h)} под порядковым номером - {h.index(min(h))}')


# МНОЖЕСТВА
# задание 1 проверить есть ли в последовательности дубликаты
def dublicat(spis):  # объявляем функцию с одним параметром
    spisok = set(spis)  # приводим его к типу множества чтобы удалились дубликаты
    if len(spis) > len(spisok):  # сравниваваем длинну параметра и множества
        return 'дубликаты были'  # если длинна парметра больше
    else:
        return 'дубликатов нет'  # если длинна множетва больше


print(dublicat([random.randint(0, 100) for c in range(10)]))


# задание 2 создать множество. создать неизмен. множество. объединить их и пересечение
def set_(set__, frozen):  # функция с 2 параметрами
    return set__ | frozen, set__ & frozen  # возвраащет операции по объединению и пересечению


print(set_({'i', 'love', 'world', 44, 50, 8, 15}, frozenset({'hello', 'world', 44, 50, 12, 7, 14})))


# дз
# 1
def sum_kortezh(kortezh: Tuple[int, ...]) -> int:  # функция которая считает сумму чисел кортежа
    return sum(kortezh)  # вернет сумму


print(sum_kortezh((0, 1, 2, 3, 4, 5, 6, 7, 8, 9)))  # подаем кортеж


# 2
def povtor(long_word: Tuple[str, ...]) -> int:  # функция которая считает количество букв в кортеже
    new = set(long_word)  # преобразуем кортеж в множество чтобы убрать повторы
    for i in new:  # проходимся циклом по множеству
        return long_word.count(i)  # возвращает количество повторов


word = ('т', 'т', 'а', 'и', 'и', 'а', 'и',
        'и', 'и', 'т', 'т', 'а', 'и', 'и',
        'и', 'и', 'и', 'т', 'и')
print(povtor(word))


# 3
def mean_temp(week_temp: List[int]) -> float:  # функция которая считает среднюю температуру
    sum_temp: int = sum(week_temp)  # переменная которая считет сумму всех температур
    days: int = len(week_temp)  # переменная которая подсчитывает количество дней
    mean_temp: float = sum_temp / days  # переменная которая считает среднюю температуру
    return mean_temp


temp = (26, 29, 34, 32, 28, 26, 23)
print(mean_temp(temp))
